<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
 		http://www.springframework.org/schema/beans
 		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd" >
    <context:annotation-config/>
    <context:component-scan base-package="epamUniversity"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:auditorium.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesMode">
            <util:constant
                    static-field="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        </property>
    </bean>
    <bean id = "gsonBuilder" class="com.google.gson.GsonBuilder"/>

    <bean id="userServiceImpl" class="epamUniversity.services.UserServiceImpl"/>
    <bean id="eventService" class="epamUniversity.services.EventServiceImpl"/>
    <bean id="bookingService" class="epamUniversity.services.BookingServiceImpl"/>
    <bean id="discountService" class="epamUniversity.services.discount.DiscountServiceImpl"/>
    <bean id="auditoriumService" class="epamUniversity.services.AuditoriumServiceImpl"/>
    <bean id="ticketService" class="epamUniversity.services.TicketsService"/>

    <bean id="newusr" class="epamUniversity.model.User" init-method="init" scope="prototype">
        <constructor-arg value="New user"/>
        <constructor-arg value="New user"/>
        <constructor-arg value="newUser@email.com"/>
    </bean>
    <bean id="usr1" class="epamUniversity.model.User" init-method="init">
        <constructor-arg value="Andriy"/>
        <constructor-arg value="Yarish"/>
        <constructor-arg value="andy@gmail.com"/>
    </bean>
    <bean id="usr2" class="epamUniversity.model.User" init-method="init">
        <constructor-arg value="Ivan"/>
        <constructor-arg value="Petrov"/>
        <constructor-arg value="ivan@gmail.com"/>
    </bean>
    <bean id="usr3" class="epamUniversity.model.User" init-method="init">
        <constructor-arg value="Petr"/>
        <constructor-arg value="Ivanov"/>
        <constructor-arg value="petr@gmail.com"/>
    </bean>
    <bean id="usr4" class="epamUniversity.model.User" init-method="init">
        <constructor-arg value="John"/>
        <constructor-arg value="Doe"/>
        <constructor-arg value="john@gmail.com"/>
    </bean>

    <bean id = "ticket" class="epamUniversity.model.Ticket" scope="prototype"/>

    <bean id="event1" class="epamUniversity.model.Event" init-method="init">
        <constructor-arg value="Matrix"/>
        <constructor-arg value="125.50"/>
        <constructor-arg value="MEDIUM"/>
        <constructor-arg>
            <bean class="org.joda.time.DateTime" scope="prototype"/>
        </constructor-arg>
    </bean>
    <bean id="event2" class="epamUniversity.model.Event" init-method="init">
        <constructor-arg value="James Bond"/>
        <constructor-arg value="250.50"/>
        <constructor-arg value="HIGH"/>
        <constructor-arg>
            <bean class="org.joda.time.DateTime" scope="prototype"/>
        </constructor-arg>
        <property name="auditoriums" >
            <util:map map-class="java.util.TreeMap" >
                <entry key-ref="dateTime" value-ref="auditorium1"/>
            </util:map>
        </property>
    </bean>

    <bean id="auditorium1" class="epamUniversity.model.Auditorium" init-method="init">
        <constructor-arg value="${name1}"/>
        <constructor-arg value="${adress1}"/>
        <constructor-arg value="${seats1}"/>
        <constructor-arg value="${vipSeatsList1}"/>
    </bean>

    <bean id="auditorium2" class="epamUniversity.model.Auditorium" init-method="init">
        <constructor-arg value="${name2}"/>
        <constructor-arg value="${adress2}"/>
        <constructor-arg value="${seats2}"/>
        <constructor-arg value="${vipSeatsList2}"/>
    </bean>

    <bean id="dateTime" class="org.joda.time.DateTime"/>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- <property name="maxUploadSize" value="40000000" /> -->
    </bean>

</beans>